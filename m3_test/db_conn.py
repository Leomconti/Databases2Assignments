import dotenv
import pymysql
from cassandra.auth import PlainTextAuthProvider
from cassandra.cluster import Cluster

dotenv.load_dotenv()

# Mysql Variables
MYSQL_IP = "localhost"
MYSQL_LOGIN = "root"
MYSQL_PASSWORD = "admin123"
DATABASE = "employees"

import json


def get_cassandra_session():
    try:
        print("Connecting to Cassandra...")
        # This secure connect bundle is autogenerated when you download your SCB,
        # if yours is different update the file name below
        cloud_config = {"secure_connect_bundle": "secure-connect-university.zip"}

        # This token JSON file is autogenerated when you download your token,
        # if yours is different update the file name below
        with open("university-token.json") as f:
            secrets = json.load(f)

        CLIENT_ID = secrets["clientId"]
        CLIENT_SECRET = secrets["secret"]

        auth_provider = PlainTextAuthProvider(CLIENT_ID, CLIENT_SECRET)
        cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
        session = cluster.connect()
        # set the keyspace
        session.set_keyspace("leo_develop")

        return session

    except Exception as e:
        print("Error connecting to Cassandra: {e}")
        raise e


def test_cassandra():
    session = get_cassandra_session()
    if session is not None:
        print("Successfully connected to Cassandra!")
        session.shutdown()
    else:
        print("No connection to Cassandra")


# Function to create a SQL connection
def create_sql_connection():
    print("Connecting to MySQL...")
    try:
        connection = pymysql.connect(
            host=MYSQL_IP, user=MYSQL_LOGIN, password=MYSQL_PASSWORD, db=DATABASE
        )
        return connection
    except pymysql.MySQLError as e:
        print(f"Error connecting to MySQL database: {e}")
        raise e


# Function to test the SQL connection
def test_sql():
    connection = create_sql_connection()
    if connection is not None:
        print("Successfully connected to MySQL!")
        connection.close()
    else:
        print("No connection to MySQL")


# test_sql()
# test_cassandra()

# mysql = create_sql_connection()
# cassandra = get_cassandra_session()
